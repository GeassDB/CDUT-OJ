{ "_id" : 1, "accept_num" : 0, "title" : "A", "tp_list" : [ { "out" : "2 2\n", "in" : "16 12" }, { "in" : "1 1", "out" : "1 0\n" }, { "out" : "1 0\n", "in" : "24 4" }, { "in" : "600 1515", "out" : "5 39\n" }, { "out" : "2 1\n", "in" : "81 18" }, { "in" : "98 224", "out" : "3 6\n" }, { "out" : "4 6\n", "in" : "7 19" }, { "in" : "200 324", "out" : "8 49\n" } ], "submit_num" : 0, "content" : "小明刚刚上了程序设计协会的算法培训课，学习了“辗转相除法”来求两个数的“最大公约数”，并且知道用两个数的乘积除以刚刚得到的“最大公约数”即可得到“最小公倍数”，这样他也学会了如何求出“最小公倍数”。\r\n与此同时，他过去就掌握了一种“排列倍数法”的方法来求最小公倍数。即让两个数中较大的数字不断的加自己，直到增倍的数最后可以整除较小的数为止。\r\n（比如求16,12的公倍数，16第一次增倍为32无法整除12，再次增倍为48，整除了12，此时正好整除了12）\r\n\r\n现在小明比较困惑着两种方法哪个效率高一些，我们假设辗转相除法每除一次消耗1s（最后两数乘积除以最大公约数忽略不计），再假设“排列倍数法”中每次自加增倍的时候也消耗1s，请你编写程序最终输出两种方法各消耗了几秒。\r\n\r\n输入：\r\n仅一行，输入两个自然数a,b（0<a,b<=32767）\r\n\r\n\r\n输出：\r\n仅一行，输出两个自然数m,n用空格分开，分别为“辗转相除法”与“排列倍数法”的方法求最小公倍数的秒数\r\n\r\n（注意：千万不要打多余的提示字符上去，请严格按照输入输出规定来写程序，切忌“画蛇添足”！不懂可以看样例！）\r\n\r\n样例输入：\r\n16 12\r\n\r\n样例输出：\r\n2 2", "score" : 20, "time" : { "$date" : 1386391339863 } }
{ "_id" : 2, "accept_num" : 0, "title" : "B", "tp_list" : [ { "in" : "1", "out" : "1.00\n1/1 \n" }, { "out" : "3.00\n1/1 1/2 \n1/2 1/1 \n", "in" : "2" }, { "in" : "3", "out" : "5.67\n1/1 1/2 1/3 \n1/2 1/1 1/2 \n1/3 1/2 1/1 \n" }, { "out" : "8.83\n1/1 1/2 1/3 1/4 \n1/2 1/1 1/2 1/3 \n1/3 1/2 1/1 1/2 \n1/4 1/3 1/2 1/1 \n", "in" : "4" }, { "in" : "10", "out" : "34.44\n1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 \n1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 \n1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 \n1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 \n1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 \n1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 \n1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 \n1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 \n1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 \n1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 \n" }, { "out" : "308.92\n1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 1/35 1/36 1/37 1/38 1/39 1/40 1/41 1/42 1/43 1/44 1/45 1/46 1/47 1/48 1/49 1/50 \n1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 1/35 1/36 1/37 1/38 1/39 1/40 1/41 1/42 1/43 1/44 1/45 1/46 1/47 1/48 1/49 \n1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 1/35 1/36 1/37 1/38 1/39 1/40 1/41 1/42 1/43 1/44 1/45 1/46 1/47 1/48 \n1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 1/35 1/36 1/37 1/38 1/39 1/40 1/41 1/42 1/43 1/44 1/45 1/46 1/47 \n1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 1/35 1/36 1/37 1/38 1/39 1/40 1/41 1/42 1/43 1/44 1/45 1/46 \n1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 1/35 1/36 1/37 1/38 1/39 1/40 1/41 1/42 1/43 1/44 1/45 \n1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 1/35 1/36 1/37 1/38 1/39 1/40 1/41 1/42 1/43 1/44 \n1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 1/35 1/36 1/37 1/38 1/39 1/40 1/41 1/42 1/43 \n1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 1/35 1/36 1/37 1/38 1/39 1/40 1/41 1/42 \n1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 1/35 1/36 1/37 1/38 1/39 1/40 1/41 \n1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 1/35 1/36 1/37 1/38 1/39 1/40 \n1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 1/35 1/36 1/37 1/38 1/39 \n1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 1/35 1/36 1/37 1/38 \n1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 1/35 1/36 1/37 \n1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 1/35 1/36 \n1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 1/35 \n1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 1/34 \n1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 1/33 \n1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 1/32 \n1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 1/31 \n1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 1/30 \n1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 1/29 \n1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 1/28 \n1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 1/27 \n1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 1/26 \n1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 1/25 \n1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 1/24 \n1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 1/23 \n1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 1/22 \n1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 1/21 \n1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 1/20 \n1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 1/19 \n1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 1/18 \n1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 1/17 \n1/35 1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 1/16 \n1/36 1/35 1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 1/15 \n1/37 1/36 1/35 1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 1/14 \n1/38 1/37 1/36 1/35 1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 1/13 \n1/39 1/38 1/37 1/36 1/35 1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 1/12 \n1/40 1/39 1/38 1/37 1/36 1/35 1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 1/11 \n1/41 1/40 1/39 1/38 1/37 1/36 1/35 1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 1/10 \n1/42 1/41 1/40 1/39 1/38 1/37 1/36 1/35 1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 1/9 \n1/43 1/42 1/41 1/40 1/39 1/38 1/37 1/36 1/35 1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 1/8 \n1/44 1/43 1/42 1/41 1/40 1/39 1/38 1/37 1/36 1/35 1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 1/7 \n1/45 1/44 1/43 1/42 1/41 1/40 1/39 1/38 1/37 1/36 1/35 1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 1/6 \n1/46 1/45 1/44 1/43 1/42 1/41 1/40 1/39 1/38 1/37 1/36 1/35 1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 1/5 \n1/47 1/46 1/45 1/44 1/43 1/42 1/41 1/40 1/39 1/38 1/37 1/36 1/35 1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 1/4 \n1/48 1/47 1/46 1/45 1/44 1/43 1/42 1/41 1/40 1/39 1/38 1/37 1/36 1/35 1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 1/3 \n1/49 1/48 1/47 1/46 1/45 1/44 1/43 1/42 1/41 1/40 1/39 1/38 1/37 1/36 1/35 1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 1/2 \n1/50 1/49 1/48 1/47 1/46 1/45 1/44 1/43 1/42 1/41 1/40 1/39 1/38 1/37 1/36 1/35 1/34 1/33 1/32 1/31 1/30 1/29 1/28 1/27 1/26 1/25 1/24 1/23 1/22 1/21 1/20 1/19 1/18 1/17 1/16 1/15 1/14 1/13 1/12 1/11 1/10 1/9 1/8 1/7 1/6 1/5 1/4 1/3 1/2 1/1 \n", "in" : "50" } ], "submit_num" : 0, "content" : "我们定义如下矩阵:\r\n1/1 1/2 1/3\r\n1/2 1/1 1/2\r\n1/3 1/2 1/1\r\n矩阵对角线上的元素始终是1/1，对角线两边分数的分母逐个递增。\r\n请求出这个矩阵的总和。\r\n \r\n\r\n输入：\r\n仅一行，给定整数N (0<N<5000)，表示矩阵为 N*N.\r\n\r\n输出：\r\n第一行：输出总和，保留2位小数。\r\n接下来的N行，输出对应的矩阵（每一行每个分数之间用空格隔开）。\r\n \r\n输入样例：\r\n4\r\n \r\n\r\n输出样例：\r\n8.83\r\n1/1 1/2 1/3 1/4\r\n1/2 1/1 1/2 1/3\r\n1/3 1/2 1/1 1/2\r\n1/4 1/3 1/2 1/1", "score" : 20, "time" : { "$date" : 1386391119097 } }
{ "_id" : 3, "accept_num" : 0, "title" : "C", "tp_list" : [ { "in" : "5 5\r\n****@\r\n*@@*@\r\n*@**@\r\n@@@*@\r\n@@**@", "out" : "2\n" }, { "out" : "0\n", "in" : "1 1\r\n*" }, { "in" : "1 1\r\n@", "out" : "1\n" }, { "out" : "1\n", "in" : "2 2\r\n*@\r\n@*" }, { "in" : "1 10\r\n*@@@@*@*@*", "out" : "3\n" }, { "out" : "4\n", "in" : "10 20\r\n*****@@@@@**********\r\n**@@@@@@@@@@********\r\n***************@@@@@\r\n***@@@@@@@@@@*******\r\n********@***********\r\n*****@@@@@**********\r\n@@@*****@@@@@@@@@@@@\r\n@@@@@@@@@@**********\r\n********************\r\n*******@************" }, { "in" : "20 20\r\n*****@@@@@**********\r\n**@@@@@@@@@@********\r\n***************@@@@@\r\n***@@@@@@@@@@*******\r\n********@***********\r\n*****@@@@@**********\r\n@@@*****@@@@@@@@@@@@\r\n@@@@@@@@@@**********\r\n********************\r\n*******@************\r\n*****@@@@@**********\r\n**@@*******@********\r\n***************@@@@@\r\n***@@@@@@@@@@*******\r\n********@***********\r\n*****@@@@@**********\r\n@@@*****@@@@@@@@@@@@\r\n@@@@@@***@**********\r\n********@***********\r\n*******@************", "out" : "9\n" }, { "out" : "5\n", "in" : "30 30\r\n@*@****@**@**@*@*@*@@*****@**@\r\n@*@**@@@@**@@@**@*@*@*@*@@@@*@\r\n***@**@**@@@@@*@@@@@*@@@**@@@*\r\n@***@@***@@*@*@**@@@@@@*@@**@*\r\n*@@@*@***@*@*@***@******@***@@\r\n*@**@@*@*@*@*@@**@*@*@*****@**\r\n*@@@@@*@@@@@@*@@@@*@@****@@**@\r\n*@@*@**@*@***@@@*@@@*@**@@*@*@\r\n@@**@@@@@@*@@*@@****@**@@**@@@\r\n*@@@@@@@@*@@**@@@@*@****@@***@\r\n**@@**@*@@***@@@**@*@@@@***@**\r\n*@@*@***@*@@**@@@@*@*@*@@@@*@*\r\n@@***@@**@**@@@***@@@*@@@@@@@*\r\n@@@**@@@@@****@@*@@@*@@*@*@@*@\r\n@@****@**@**@@*@*@****@@@@@@*@\r\n@*@@@*@*@***@*@@*@@*@@*@@*@*@*\r\n@@@@*@***@@@@*@*@*@@**@*@**@*@\r\n****@@*@**@***@@@@@*@**@@@**@*\r\n@*@**@***@*@@*@*@@@@**@*@@@**@\r\n****@*@*@****@**@@@@******@@**\r\n@@**@@@@*@@@**@@****@@*@**@@*@\r\n@*@@@**@*@@**@@@@*@*@*@@@@*@@@\r\n*@@@**@@@@@@@*@***@*@**@****@@\r\n*@@*@*****@@@***@@@*@*@@*@*@@@\r\n@*@**@*@*@@@@@@*@*@@@@*@*@@*@*\r\n*@*@**@*@*@**@@*@*@**@*@@@***@\r\n*@@*****@@*@@@@@***@@**@**@**@\r\n**@*@@@*@*@@*@@*@@**@@****@*@@\r\n*@*@*@*@*@*@@*@@@@*@@*@@*@**@*\r\n*@**@@@*@**@**@*@*@@@*@*@***@*" }, { "in" : "50 50\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************\r\n**************************************************", "out" : "0\n" } ], "submit_num" : 0, "content" : "假设你是一名成都理工的老师，班级里的座位假设为一个N*M的方阵，里面零零散散的坐着一些准备上课的学生，很多人没来上课，你决定让学生签到来找出谁没来上课。但是你又不想耽误太长时间来一个接着一个的签到，恰好你手上有几张签到表，你发现只要一个学生签到之后，身边的八个相邻的座位假如坐着学生（前、后、左、右、前右、前左、后右、后左）就可以把刚才的签到表拿过来接着签到即公用一张签到表，但是除此之外，不相邻的两个学生之间就不方便相互公用一张签到表。\r\n那么这次上课签到，你需要发放几张签到表到学生手里？\r\n\r\n输入：\r\n第一行输入两个数字N与M(0<N，M<=50)，分别代表上课座位的行数和列数。\r\n接下来的N行，即输入现场的座位分布情况，*代表无学生，@代表有学生\r\n\r\n输出：\r\n一个数字，即需要多少个签到表。（提示：即求多少组@是连通的）\r\n\r\n输入样例：\r\n5 5 \r\n****@\r\n*@@*@\r\n*@**@\r\n@@@*@\r\n@@**@\r\n\r\n输出样例：\r\n2", "score" : 20, "time" : { "$date" : 1386391358023 } }
{ "_id" : 4, "accept_num" : 0, "title" : "D", "tp_list" : [ { "in" : "4 6\r\n2 3 4 6", "out" : "2\n" }, { "out" : "3\n", "in" : "5 10\r\n2 3 4 5 5 6" }, { "in" : "5 8\r\n1 4 18 33 2", "out" : "0\n" }, { "out" : "1\n", "in" : "1 10\r\n10" }, { "in" : "10 100\r\n100 30 60 10 10 10 55 15 101 80", "out" : "12\n" } ], "submit_num" : 0, "content" : "“全国软件程序设计大赛理工预选赛”开赛在即，总分数为S分。出题人负责出N道题，按照顺序每道题对应相应的分数，因为不同难度对应不同分数。而另一个人，选题人则负责抽取其中的一部分题目作为最终的考试题。不过对于选题人有一个要求，就是所抽取的题目的分数总和必须恰好为S分。那么对于第二个人他将有几种选择？\r\n\r\n输入：\r\n共需输入两行\r\n第一行输入数字N和总分数S，N代表出题人总共的出了几道题。（0<N<=15,0<S<=32767）\r\n第二行输入N个数字，第N个数字代表第N道题的分值。\r\n\r\n输出：\r\n输出抽题人的选择方式有几种（一种都没有就输出0）。\r\n\r\n输入样例：\r\n4 6\r\n2 3 4 6\r\n\r\n输出样例：\r\n2\r\n\r\n（对输出样例的解释：即抽题人有两种方式来正好凑齐6分。第一种为单独出第四题占6分；第二种为出第一题和第三题，各占2分与4分，2+4=6）", "score" : 20, "time" : { "$date" : 1386391371735 } }
