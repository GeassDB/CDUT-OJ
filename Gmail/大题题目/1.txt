<br/>小明刚刚上了程序设计协会的算法培训课，学习了“辗转相除法”来求两个数的“最大公约数”，并且知道用两个数的乘积除以刚刚得到的“最大公约数”即可得到“最小公倍数”，这样他也学会了如何求出“最小公倍数”。
<br/>与此同时，他过去就掌握了一种“排列倍数法”的方法来求最小公倍数。即让两个数中较大的数字不断的加自己，直到增倍的数最后可以整除较小的数为止。
<br/>（比如求16,12的公倍数，16第一次增倍为32无法整除12，再次增倍为48，整除了12，此时正好整除了12）
<br/>
<br/>现在小明比较困惑着两种方法哪个效率高一些，我们假设辗转相除法每除一次消耗1s（最后两数乘积除以最大公约数忽略不计），再假设“排列倍数法”中每次自加增倍的时候也消耗1s，请你编写程序最终输出两种方法各消耗了几秒。
<br/>
<br/>输入：
<br/>仅一行，输入两个自然数a,b（0<a,b<=32767）
<br/>
<br/>
<br/>输出：
<br/>仅一行，输出两个自然数m,n用空格分开，分别为“辗转相除法”与“排列倍数法”的方法求最小公倍数的秒数
<br/>
<br/>（注意：千万不要打多余的提示字符上去，请严格按照输入输出规定来写程序，切忌“画蛇添足”！不懂可以看样例！）
<br/>
<br/>样例输入：
<br/>16 12
<br/>
<br/>样例输出：
<br/>2 2
